rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Kullanıcı kimlik doğrulama kontrolü
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Kullanıcının kendi verilerine erişim kontrolü
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Admin kontrolü
    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/userSecurityProfiles/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/userSecurityProfiles/$(request.auth.uid)).data.role in ['admin', 'superAdmin'];
    }
    
    // Editör kontrolü
    function isEditor() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/userSecurityProfiles/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/userSecurityProfiles/$(request.auth.uid)).data.role in ['editor', 'admin', 'superAdmin'];
    }
    
    // Kullanıcının güvenli olup olmadığını kontrol et
    function isUserSecure(userId) {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/userSecurityProfiles/$(userId)) &&
        !get(/databases/$(database)/documents/userSecurityProfiles/$(userId)).data.isBanned &&
        !get(/databases/$(database)/documents/userSecurityProfiles/$(userId)).data.isDeleted;
    }

    // ==================== KULLANICI PROFİLLERİ ====================
    
    // Kullanıcı profilleri
    match /userProfiles/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }
    
    // Kullanıcı güvenlik profilleri
    match /userSecurityProfiles/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }
    
    // Kullanıcı istatistikleri
    match /userStats/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }
    
    // Kullanıcı kitapları
    match /userBooks/{bookId} {
      allow read: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
      allow delete: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
    }
    
    // Kullanıcı oturumları
    match /userSessions/{sessionId} {
      allow read: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
      allow delete: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
    }

    // ==================== GÜVENLİK OLAYLARI ====================
    
    // Güvenlik olayları
    match /securityEvents/{eventId} {
      allow read: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }
    
    // Cihaz bilgileri
    match /deviceInfo/{userId}/devices/{deviceId} {
      allow read: if isOwner(userId) || isAdmin();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isOwner(userId) || isAdmin();
    }

    // ==================== RAPORLAMA SİSTEMİ ====================
    
    // Raporlar
    match /reports/{reportId} {
      allow read: if isAuthenticated() && 
        (resource.data.reporterId == request.auth.uid || isAdmin() || isEditor());
      allow create: if isAuthenticated() && 
        request.resource.data.reporterId == request.auth.uid;
      allow update: if isAdmin() || isEditor();
      allow delete: if isAdmin();
    }
    
    // Moderasyon kuyruğu
    match /moderationQueue/{reportId} {
      allow read: if isAdmin() || isEditor();
      allow create: if isAuthenticated();
      allow update: if isAdmin() || isEditor();
      allow delete: if isAdmin();
    }
    
    // Moderasyon istatistikleri
    match /moderationStats/{statsId} {
      allow read: if isAdmin() || isEditor();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAdmin();
    }

    // ==================== REFERANS SİSTEMİ ====================
    
    // Referans kodları
    match /referralCodes/{codeId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
      allow delete: if isAdmin();
    }
    
    // Referans kayıtları
    match /referrals/{referralId} {
      allow read: if isAuthenticated() && 
        (resource.data.referrerId == request.auth.uid || 
         resource.data.referredId == request.auth.uid || 
         isAdmin());
      allow create: if isAuthenticated();
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }
    
    // Kullanıcı referans bilgileri
    match /userReferralInfo/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }

    // ==================== KİTAP SİSTEMİ ====================
    
    // Kitaplar
    match /books/{bookId} {
      allow read: if isAuthenticated();
      allow create: if isEditor();
      allow update: if isEditor();
      allow delete: if isAdmin();
    }
    
    // Kitap kategorileri
    match /categories/{categoryId} {
      allow read: if isAuthenticated();
      allow create: if isEditor();
      allow update: if isEditor();
      allow delete: if isAdmin();
    }
    
    // Kitap yorumları
    match /comments/{commentId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid &&
        isUserSecure(request.auth.uid);
      allow update: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isEditor());
      allow delete: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isEditor());
    }
    
    // Kitap puanları
    match /ratings/{ratingId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid &&
        isUserSecure(request.auth.uid);
      allow update: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isEditor());
      allow delete: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isEditor());
    }

    // ==================== AKTİVİTE TAKİBİ ====================
    
    // Günlük aktivite
    match /dailyActivity/{userId}/activities/{dateKey} {
      allow read: if isOwner(userId) || isAdmin();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }
    
    // Aylık okuma süresi
    match /monthlyReading/{userId}/months/{monthKey} {
      allow read: if isOwner(userId) || isAdmin();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }

    // ==================== SİPARİŞ YÖNETİMİ ====================
    
    // Siparişler
    match /orders/{orderId} {
      allow read: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
      allow delete: if isAdmin();
    }

    // ==================== SİPARİŞ YÖNETİMİ ====================
    
    // Siparişler
    match /orders/{orderId} {
      allow read: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
      allow delete: if isAdmin();
    }

    // ==================== PUAN SİSTEMİ ====================
    
    // Puan işlemleri
    match /pointTransactions/{transactionId} {
      allow read: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }
    
    // Puan ödülleri
    match /rewards/{rewardId} {
      allow read: if isAuthenticated();
      allow create: if isAdmin();
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }

    // ==================== GENEL GÜVENLİK ====================
    
    // Tüm koleksiyonlar için genel güvenlik
    match /{document=**} {
      // Admin her şeye erişebilir
      allow read, write: if isAdmin();
      
      // Kimlik doğrulama yapılmamış istekleri reddet
      allow read, write: if !isAuthenticated();
    }
  }
}
